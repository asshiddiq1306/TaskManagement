@using TaskManagement.Application.DTOs

@if (IsVisible)
{
    <div class="modal show" style="display: block; background-color: rgba(0,0,0,0.5);">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Create New User</h5>
                    <button type="button" class="btn-close" @onclick="CloseModal"></button>
                </div>
                <div class="modal-body">
                    <EditForm Model="UserModel" OnValidSubmit="HandleSubmit">
                        <DataAnnotationsValidator />

                        <div class="mb-3">
                            <label class="form-label">Name *</label>
                            <InputText @bind-Value="UserModel.Name" class="form-control" placeholder="Enter user name" />
                            <ValidationMessage For="() => UserModel.Name" class="text-danger" />
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Email *</label>
                            <InputText @bind-Value="UserModel.Email" class="form-control" type="email" placeholder="Enter user email" />
                            <ValidationMessage For="() => UserModel.Email" class="text-danger" />
                        </div>

                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" @onclick="CloseModal">Cancel</button>
                            <button type="submit" class="btn btn-primary" disabled="@IsProcessing">
                                @if (IsProcessing)
                                {
                                    <span class="spinner-border spinner-border-sm me-2"></span>
                                }
                                Create User
                            </button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public bool IsVisible { get; set; }
    [Parameter] public bool IsProcessing { get; set; }
    [Parameter] public CreateUserDto UserModel { get; set; } = new();
    [Parameter] public EventCallback OnClose { get; set; }
    [Parameter] public EventCallback<CreateUserDto> OnSubmit { get; set; }

    private async Task CloseModal()
    {
        await OnClose.InvokeAsync();
    }

    private async Task HandleSubmit()
    {
        await OnSubmit.InvokeAsync(UserModel);
    }
}